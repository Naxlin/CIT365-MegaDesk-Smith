<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAPxQTFRF////
        jF03uINTc4O/4OLjsLa711pK7LoWjV86pXpV8efdtHpEvIlYoG9EuoRUtIBQmWpJ/fnm7sA6i1s16N/X
        2Mi8hFAhkWRBk2M745A0lG1L1lVLu4th5NnP9vf33uHvvaSQ7e7vbX69xsrN1NfZ3uDhgI7Fd4fB7O72
        ucHf67YA9dyGt7zBztPowsjinKfRrrfZ1VJAh5XIkZ7N+u3I/vvx2Nzt7LCnt5qDp3RI9vLv8vT6r7fY
        yc7lzdDTl6PP+Oet8cxc7b8u9t6b/PTa8tFp+uvA8cxL8sjD6aSB5ZdP8Mhw9duC9tvY4YN42WBX3XFk
        556V+OHe45CFOLRH2wAACUNJREFUeF7tnWtD2zYUhg0JZWsHrKUtjG1mCSQESCABShcotKVryy6lF/7/
        f5lsv3bsWLKPJFuxUz2fCFjOeSLp6FhxiGOpKK4PHswfbqtzvdPv7+zstuZTsnXdXwrZ6cyfo7s78fPY
        aeEP84K7A7OIfhN/mg/cZAcGzFMvcgWX+vMzF/mCbC7i7zPjstfb5tK7xBE0WgLB2U5Fd3twNDw96e41
        ptnrnpwO9wc9HJhPK5VkIq5xiHkuB8OTRrvdhtQ07C97p6/OcXAOGYJL/Vklm8FpVyQX0W6fDLdxfBbp
        ZSLObIZp7zg9NPmcDNAki13IcNnFQUYZ5PffhCM0yiJLcRaGVw0JwUZ7SFjTMhSvzS+JRwidSnsfDbMQ
        K5qvTs8ROJ221lzcaRpW7HURtwRdSkYVKV43DSsey8zBkGPKXOIr9nebzabJqXhOXSYSdCnjlK/Y7zBD
        k4rHiFmO9jGaZ8NTZIPUqOK5wiz0OKHMRJ5iPxA0p7iPiKW5wglymFb0Z6GPoZ0pVynPMEhroseUYrMF
        QVMJtfda1XBIvV5MKHbYdQcEDSlunyJiaY7JF4sxRSZoWnH7BAHL0j6lXw5Hir6g48KPYUBRNZU2GhKG
        oWIgaFhxoLTeexCXiwBfMRRMKJaeUK8Qrzyk0jSCKU4EjSoeKabSRmOPuGUDduOCJhX3lQ3bcobTTBJq
        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
        SUVORK5CYII=
</value>
  </data>
</root>